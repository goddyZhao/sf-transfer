#!/usr/bin/env node

var sf =require('../');

var args = process.argv;

var inputs = [];
var output;
var append = false;
var isOutputSpecified = false;
var outputFlagIndex;
var dir;
var isDirSpecified = false;
var dirIndex;

var inputRxp = /^(-i|--input)$/;
var dirRxp = /^(-d|--dir)$/;
var outputRxp = /^(-o|--output)$/;
var appendRxp = /^(-a|--append)$/;

if(!inputRxp.test(args[2])){
  throw new Error('No --input!');
}

if(args.length < 4){
  throw new Error('No input file specified!');
}

args = Array.prototype.slice.call(args,3);

args.forEach(function(arg, i){
  if(outputRxp.test(arg)){
    isOutputSpecified = true;
    outputFlagIndex = i;
  }else if(appendRxp.test(arg)){
    if(i !== args.length - 1){
      throw new Error('-a or --append must be put as the last parameter');
    }
    append = true;
    args = args.slice(0, args.length - 1);
  }else if(dirRxp.test(arg)){
    isDirSpecified = true;
    dir = args[i+1];
    dirIndex = i;
  }
});

// Extract dir
if(isDirSpecified){
  args.splice(dirIndex, 2);
  if(isOutputSpecified && outputFlagIndex > dirIndex){
    outputFlagIndex = outputFlagIndex - 2;
  }
}

args.forEach(function(arg, i){
  if(!isOutputSpecified){
    inputs.push(arg);
    return;
  }

  if(i < outputFlagIndex){
    inputs.push(arg);
  }else if(i > outputFlagIndex){
    output = output || arg;
  }
});

sf.transfer(inputs, output, dir, append);
